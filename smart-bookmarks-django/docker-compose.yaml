version: '3.7'
services:
  app:
    build:
      context: .
    image: app-image
    restart: unless-stopped
    env_file:
      - .docker.env
    ports:
      - 8000
    volumes:
      - .:/app
    depends_on:
      - database
      - redis
      - elasticsearch
      - nginx
  celery-beat:
    image: app-image
    restart: unless-stopped
    env_file:
      - .docker.env
    command: ["/usr/bin/env", "celery", "--app=smart_bookmarks.celery:celery_app", "beat", "-l", "info"]
    volumes:
      - .:/app
    depends_on:
      - database
      - rabbitmq
      - redis
  celery-worker-default:
    image: app-image
    shm_size: 2G
    restart: unless-stopped
    env_file:
      - .docker.env
    command: ["/usr/bin/env", "celery", "--app=smart_bookmarks.celery:celery_app", "worker", "-l", "info", "-Q", "default", "--concurrency=2", "-n", "worker.default@%h"]
    volumes:
      - .:/app
    depends_on:
      - database
      - rabbitmq
      - redis
      - elasticsearch
  celery-worker-scraper:
    image: app-image
    shm_size: 2G
    restart: unless-stopped
    env_file:
      - .docker.env
    command: ["/usr/bin/env", "celery", "--app=smart_bookmarks.celery:celery_app", "worker", "-l", "info", "-Q", "scraper", "--concurrency=2", "-n", "worker.scraper@%h"]
    volumes:
      - .:/app
    depends_on:
      - database
      - rabbitmq
      - redis
  rabbitmq:
    image: rabbitmq:3.8.2
    restart: unless-stopped
    env_file:
      - .docker.env
    ports:
      - 5672:5672
  nginx:
    image: nginx:1.17
    restart: unless-stopped
    ports:
      - 8000:8000
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./smart_bookmarks/static_root:/static
#    depends_on:
#      - app
  database:
    restart: unless-stopped
    image: postgres:12
    env_file:
      - .docker.env
    ports:
      - 5432:5432
    volumes:
      - dbdata:/var/lib/postgresql/data
  redis:
    image: redis:5
    restart: unless-stopped
    ports:
      - 6379:6379
  flower:
    image: app-image
    restart: unless-stopped
    env_file:
      - .docker.env
    command: ["/usr/bin/env", "celery", "flower", "-A", "smart_bookmarks.celery:celery_app"]
    ports:
      - 5555:5555
    volumes:
      - .:/app
    depends_on:
      - rabbitmq
  elasticsearch:
    image: elasticsearch:7.6.0
    environment:
      - node.name=elasticsearch
      - network.host=0.0.0.0
      - discovery.seed_hosts=elasticsearch
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.enabled=true
      - http.cors.allow-origin=*
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
  elasticsearch-head:
    build:
      context: .
      dockerfile: Dockerfile-elasticsearch-head
    ports:
      - 9100:9100
    depends_on:
      - elasticsearch

volumes:
  dbdata:
  esdata:
